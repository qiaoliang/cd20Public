<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on 持续交付 2.0</title>
    <link>http://www.continuousdelivery20.com/blog/</link>
    <description>Recent content in Blogs on 持续交付 2.0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 18 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.continuousdelivery20.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微软巨人，如何将敏捷原则应用于团队改造</title>
      <link>http://www.continuousdelivery20.com/blog/ms-devops-1-team/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/ms-devops-1-team/</guid>
      <description>本文主要是讲Azure DevOps和DevOps Server团队在应用敏捷原则过程中，如何管理团队，角色，计划，迭代和流程的改进，由Aaro</description>
    </item>
    
    <item>
      <title>Etsy的移动端持续交付流水线</title>
      <link>http://www.continuousdelivery20.com/blog/etsy-mobile-cd/</link>
      <pubDate>Fri, 28 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/etsy-mobile-cd/</guid>
      <description>引言 在很久以前，本站报导过Etsy如何实现Web端每日在生产环境上部署40次。现在移动应用大潮来了，它又是如何做的呢？ 正文 移动app的好评在</description>
    </item>
    
    <item>
      <title>敏捷开发方法们，为什么让你感觉很糟糕？</title>
      <link>http://www.continuousdelivery20.com/blog/why-dev-method-feel-bad/</link>
      <pubDate>Sun, 12 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/why-dev-method-feel-bad/</guid>
      <description>为什么软件开发方法论让你觉得糟糕？ 围绕软件开发实践和方法论，总有很多教条式的口水仗。阶段式（phase-gate）方法能够有效管理软件开发过</description>
    </item>
    
    <item>
      <title>既满足PCI-DSS，又做持续部署。电商网站 Etsy 如何做到的呢？</title>
      <link>http://www.continuousdelivery20.com/blog/etsy-pci-cd/</link>
      <pubDate>Wed, 13 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/etsy-pci-cd/</guid>
      <description>Etsy每天向生产环境部署25到50次； 他们为其支付系统构建一个符合PCI-DSS（支付卡行业数据信息安全标准）的环境； 责任分离并不是指：大</description>
    </item>
    
    <item>
      <title>IMVU如何在实施持续部署的同时确保软件质量</title>
      <link>http://www.continuousdelivery20.com/blog/imvu-cd-with-high-quality/</link>
      <pubDate>Fri, 09 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/imvu-cd-with-high-quality/</guid>
      <description>正文 在科技圈的各种大会上，我们和很多人有过交谈，他们对我们在 IMVU 网站上的持续部署流程很感兴趣，想知道我们是如何每天部署50次代码的。我们也听到</description>
    </item>
    
    <item>
      <title> 利用抽象分支技术，进行大规模软件的增量式改造</title>
      <link>http://www.continuousdelivery20.com/blog/abstract-branch/</link>
      <pubDate>Mon, 18 May 2009 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/abstract-branch/</guid>
      <description>很多开发团队通常严重依赖于版本控制系统的分支功能。分布式版本控制系统让分支操作更加方便。然而，在《持续交付》一书中描述的很多非常规言论中，就</description>
    </item>
    
    <item>
      <title>为什么要持续部署（Continuous Deployment）？</title>
      <link>http://www.continuousdelivery20.com/blog/cd-a-tactic-advocated-by-eric-ries/</link>
      <pubDate>Sat, 28 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/cd-a-tactic-advocated-by-eric-ries/</guid>
      <description>本文讨论了一个非常关键的问题：“IMVU为什么要做持续部署？”。IMVU的创始人之一就是 《精益创业》 的作者Eric Ries 。这也是他非常重要的关于</description>
    </item>
    
  </channel>
</rss>