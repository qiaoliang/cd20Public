<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>实践案例 on 持续交付 2.0</title>
    <link>http://www.continuousdelivery20.com/categories/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/</link>
    <description>Recent content in 实践案例 on 持续交付 2.0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 12 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.continuousdelivery20.com/categories/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mob Refectoring：扎堆儿编程的一次经历</title>
      <link>http://www.continuousdelivery20.com/blog/mob-programming/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/mob-programming/</guid>
      <description>这是我在2009年带领 GoCD 团队时的一个经历。套用现在的时髦词汇，就叫“mob programming”。 团队对某一模块的代码进行了一次重构，引入</description>
    </item>
    
    <item>
      <title>微软测试转型的历程与心法(5000字长文)</title>
      <link>http://www.continuousdelivery20.com/blog/ms-test-transformation/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/ms-test-transformation/</guid>
      <description>一、微软如何做测试 长期以来，Microsoft都为每个软件产品都设定了一个基本的工程人员配置。每个产品团队都有三个不同的职能人员。产品经理（</description>
    </item>
    
    <item>
      <title>微软巨人，如何将敏捷原则应用于团队改造</title>
      <link>http://www.continuousdelivery20.com/blog/ms-devops-1-team/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/ms-devops-1-team/</guid>
      <description>本文主要是讲Azure DevOps和DevOps Server团队在应用敏捷原则过程中，如何管理团队，角色，计划，迭代和流程的改进，由Aaro</description>
    </item>
    
    <item>
      <title>微软:测试左移，让其运行更快、更可靠</title>
      <link>http://www.continuousdelivery20.com/blog/ms-devops-shift-left/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/ms-devops-shift-left/</guid>
      <description>我们原来是怎么工作的 2014年9月，我们已经进入了云计算的第三个年头。然而，我们当时仍旧是按照云计算时代之前的那种传统方式进行测试。 我们试图</description>
    </item>
    
    <item>
      <title>微软：测试右移，生产环境上的持续测试</title>
      <link>http://www.continuousdelivery20.com/blog/ms-devops-shift-right-test-in-production/</link>
      <pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/ms-devops-shift-right-test-in-production/</guid>
      <description>生产环境是唯一的，无法复制 这是我们重要变某的第三部分，也是最后一部分。正如你见过的，我们减少了对在实验室内做功能测试的依赖，转而使用单元测试</description>
    </item>
    
    <item>
      <title>Etsy的移动端持续交付流水线</title>
      <link>http://www.continuousdelivery20.com/blog/etsy-mobile-cd/</link>
      <pubDate>Fri, 28 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/etsy-mobile-cd/</guid>
      <description>引言 在很久以前，本站报导过Etsy如何实现Web端每日在生产环境上部署40次。现在移动应用大潮来了，它又是如何做的呢？ 正文 移动app的好评在</description>
    </item>
    
    <item>
      <title>既满足PCI-DSS，又做持续部署。电商网站 Etsy 如何做到的呢？</title>
      <link>http://www.continuousdelivery20.com/blog/etsy-pci-cd/</link>
      <pubDate>Wed, 13 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/etsy-pci-cd/</guid>
      <description>Etsy每天向生产环境部署25到50次； 他们为其支付系统构建一个符合PCI-DSS（支付卡行业数据信息安全标准）的环境； 责任分离并不是指：大</description>
    </item>
    
    <item>
      <title>IMVU如何在实施持续部署的同时确保软件质量</title>
      <link>http://www.continuousdelivery20.com/blog/imvu-cd-with-high-quality/</link>
      <pubDate>Fri, 09 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>http://www.continuousdelivery20.com/blog/imvu-cd-with-high-quality/</guid>
      <description>正文 在科技圈的各种大会上，我们和很多人有过交谈，他们对我们在 IMVU 网站上的持续部署流程很感兴趣，想知道我们是如何每天部署50次代码的。我们也听到</description>
    </item>
    
  </channel>
</rss>